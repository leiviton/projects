version: '3'
services:
    angular:
        image: angular
        container_name: angular
        build: ../front-web-sac
        ports:
            - 80:80
        networks:
            - api-web-sac-network
        depends_on:
            - api-web-sac
    api-web-sac:
        build: .
        container_name: api-web-sac
        entrypoint:  dockerize -template ./.docker/app/.env:.env -wait tcp://db-api-web-sac:3306 -timeout 40s ./.docker/entrypoint.sh
        environment:
            - DB_HOST=db-api-web-sac
            - DB_PORT=3306
            - DB_DATABASE=api-web-sac
            - DB_USERNAME=root
            - DB_PASSWORD=root
            - APP_URL=http://10.0.108.137
        volumes:
            - .:/var/www
        networks:
            - api-web-sac-network
        depends_on:
            - db-api-web-sac
            - redis-api-web-sac

    nginx-api-web-sac:
        build: .docker/nginx
        container_name: nginx-api-web-sac
        restart: always
        tty: true
        ports:
            - "2904:80"
        volumes:
            - .:/var/www
        networks:
            - api-web-sac-network
        depends_on:
            - api-web-sac
    db-api-web-sac:
        image: mysql:5.7
        command: --innodb-use-native-aio=0
        container_name: db-api-web-sac
        restart: always
        tty: true
        ports:
            - "3306:3308"
        volumes:
            - ./.docker/dbdata:/var/lib/mysql
        environment:
            - MYSQL_DATABASE=api-web-sac
            - MYSQL_ROOT_PASSWORD=root
            - MYSQL_USER=root
        networks:
            - api-web-sac-network

    redis-api-web-sac:
        image: redis:alpine
        container_name: redis-api-web-sac
        expose:
            - 6379
        networks:
            - api-web-sac-network

networks:
    api-web-sac-network:
        driver: bridge
